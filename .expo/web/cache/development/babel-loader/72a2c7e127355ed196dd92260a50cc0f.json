{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\USUARIO\\\\Desktop\\\\React Native course\\\\FirstApp\\\\first-app\\\\App.tsx\";\nimport React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredTask = _useState2[0],\n      setEnteredTask = _useState2[1];\n\n  var _useState3 = useState(Array()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      taskList = _useState4[0],\n      setTaskList = _useState4[1];\n\n  var taskInputHandler = function taskInputHandler(task) {\n    return setEnteredTask(task);\n  };\n\n  var addTaskHandler = function addTaskHandler() {\n    setTaskList(function (taskList) {\n      return [].concat(_toConsumableArray(taskList), [enteredTask]);\n    });\n    setEnteredTask(\"\");\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.inputArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Write a task\",\n    value: enteredTask,\n    onChangeText: taskInputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }), React.createElement(Button, {\n    title: \"Add\",\n    onPress: addTaskHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  })), React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, taskList.map(function (task, index) {\n    React.createElement(View, {\n      key: index,\n      style: styles.taskItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }\n    }, task));\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    padding: 50\n  },\n  inputArea: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  textInput: {\n    borderBottomColor: \"black\",\n    borderBottomWidth: 1,\n    padding: 10,\n    width: \"80%\"\n  },\n  taskItem: {\n    paddingVertical: 5,\n    borderBottomColor: \"gray\",\n    borderBottomWidth: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/USUARIO/Desktop/React Native course/FirstApp/first-app/App.tsx"],"names":["React","useState","App","enteredTask","setEnteredTask","Array","taskList","setTaskList","taskInputHandler","task","addTaskHandler","styles","container","inputArea","textInput","map","index","taskItem","StyleSheet","create","padding","flexDirection","justifyContent","alignItems","borderBottomColor","borderBottomWidth","width","paddingVertical"],"mappings":";;;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;;AAGA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC1B,kBAAsCD,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOE,WAAP;AAAA,MAAoBC,cAApB;;AACA,mBAAgCH,QAAQ,CAACI,KAAK,EAAN,CAAxC;AAAA;AAAA,MAAOC,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,IAAD;AAAA,WAAkBL,cAAc,CAACK,IAAD,CAAhC;AAAA,GAAzB;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzBH,IAAAA,WAAW,CAAC,UAAAD,QAAQ;AAAA,0CAAQA,QAAR,IAAkBH,WAAlB;AAAA,KAAT,CAAX;AACAC,IAAAA,cAAc,CAAC,EAAD,CAAd;AACH,GAHD;;AAKA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEO,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEF,MAAM,CAACG,SAAzB;AACW,IAAA,WAAW,EAAC,cADvB;AACsC,IAAA,KAAK,EAAEX,WAD7C;AAEW,IAAA,YAAY,EAAEK,gBAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAII,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAoB,IAAA,OAAO,EAAEE,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,EAOI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,QAAQ,CAACS,GAAT,CAAa,UAACN,IAAD,EAAOO,KAAP,EAAiB;AAC3B,wBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,KAAX;AAAkB,MAAA,KAAK,EAAEL,MAAM,CAACM,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOR,IAAP,CADJ;AAGH,GAJA,CADL,CAPJ,CADJ;AAiBH;AAED,IAAME,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC7BP,EAAAA,SAAS,EAAE;AACPQ,IAAAA,OAAO,EAAE;AADF,GADkB;AAI7BP,EAAAA,SAAS,EAAE;AACPQ,IAAAA,aAAa,EAAE,KADR;AAEPC,IAAAA,cAAc,EAAE,eAFT;AAGPC,IAAAA,UAAU,EAAE;AAHL,GAJkB;AAS7BT,EAAAA,SAAS,EAAE;AACPU,IAAAA,iBAAiB,EAAE,OADZ;AAEPC,IAAAA,iBAAiB,EAAE,CAFZ;AAGPL,IAAAA,OAAO,EAAE,EAHF;AAIPM,IAAAA,KAAK,EAAE;AAJA,GATkB;AAe7BT,EAAAA,QAAQ,EAAE;AACNU,IAAAA,eAAe,EAAE,CADX;AAENH,IAAAA,iBAAiB,EAAE,MAFb;AAGNC,IAAAA,iBAAiB,EAAE;AAHb;AAfmB,CAAlB,CAAf","sourcesContent":["import {StatusBar} from 'expo-status-bar';\nimport React, {useState} from 'react';\nimport {Button, ScrollView, StyleSheet, Text, TextInput, View} from 'react-native';\n\nexport default function App() {\n    const [enteredTask, setEnteredTask] = useState(\"\");\n    const [taskList, setTaskList] = useState(Array<string>());\n\n    const taskInputHandler = (task: string) => setEnteredTask(task)\n\n    const addTaskHandler = () => {\n        setTaskList(taskList => [...taskList, enteredTask])\n        setEnteredTask(\"\")\n    }\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.inputArea}>\n                <TextInput style={styles.textInput}\n                           placeholder=\"Write a task\" value={enteredTask}\n                           onChangeText={taskInputHandler}/>\n                <Button title=\"Add\" onPress={addTaskHandler}/>\n            </View>\n            <ScrollView>\n                {taskList.map((task, index) => {\n                    <View key={index} style={styles.taskItem}>\n                        <Text>{task}</Text>\n                    </View>\n                })}\n            </ScrollView>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        padding: 50\n    },\n    inputArea: {\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n    },\n    textInput: {\n        borderBottomColor: \"black\",\n        borderBottomWidth: 1,\n        padding: 10,\n        width: \"80%\"\n    },\n    taskItem: {\n        paddingVertical: 5,\n        borderBottomColor: \"gray\",\n        borderBottomWidth: 1,\n    }\n});\n"]},"metadata":{},"sourceType":"module"}